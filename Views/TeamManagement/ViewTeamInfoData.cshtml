@model PMS.DynamicBindingModels.TeamMemberOverview_Detail_ForViewUpdate

@{
    ViewBag.Title = "View Team Detail";
    Layout = null;
}


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>PMS | @ViewBag.Title</title>
    @Html.Partial("_AdminHeaderLinks")


    <style>
        .modal1-confirm {
            font-size: 14px;
        }

            .modal1-confirm .modal-content {
                padding: 20px;
                border-radius: 5px;
                border: none;
            }

            .modal1-confirm .modal-header {
                border-bottom: none;
                position: relative;
            }

            .modal1-confirm h4 {
                text-align: center;
                font-size: 26px;
                margin: 30px 0 -15px;
            }

            .modal1-confirm .form-control,
            .modal1-confirm .btn {
                min-height: 40px;
                border-radius: 3px;
            }

            .modal1-confirm .close {
                position: absolute;
                top: -5px;
                right: -5px;
            }

            .modal1-confirm .modal-footer {
                border: none;
                text-align: center;
                border-radius: 5px;
                font-size: 13px;
            }

            .modal1-confirm .icon-box {
                position: absolute;
                margin: 0 auto;
                left: 0;
                right: 0;
                top: -70px;
                width: 95px;
                height: 95px;
                border-radius: 50%;
                z-index: 9;
                background: #82ce34;
                padding: 15px;
                text-align: center;
                box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.1);
            }

                .modal1-confirm .icon-box i {
                    font-size: 58px;
                    position: relative;
                    top: 3px;
                }

            .modal1-confirm .modal-dialog {
                margin-top: 80px;
            }

            .modal1-confirm .btn {
                border-radius: 4px;
                text-decoration: none;
                transition: all 0.4s;
                line-height: normal;
                border: none;
            }

                .modal1-confirm .btn:hover,
                .modal1-confirm .btn:focus {
                    background: #6fb32b;
                    outline: none;
                }




        .modal-confirm {
            color: #636363;
        }

            .modal-confirm .modal-content {
                padding: 20px;
                border-radius: 5px;
                border: none;
                text-align: center;
                font-size: 14px;
            }

            .modal-confirm .modal-header {
                border-bottom: none;
                position: relative;
            }

            .modal-confirm h4 {
                text-align: center;
                font-size: 26px;
                margin: 30px 0 -10px;
            }

            .modal-confirm .close {
                position: absolute;
                top: -5px;
                right: -2px;
            }

            .modal-confirm .modal-body {
                color: #999;
            }

            .modal-confirm .modal-footer {
                border: none;
                text-align: center;
                border-radius: 5px;
                font-size: 13px;
                padding: 10px 15px 25px;
            }

                .modal-confirm .modal-footer a {
                    color: #999;
                }

            .modal-confirm .icon-box {
                width: 80px;
                height: 80px;
                margin: 0 auto;
                border-radius: 50%;
                z-index: 9;
                text-align: center;
                border: 3px solid #f15e5e;
            }

                .modal-confirm .icon-box i {
                    color: #f15e5e;
                    font-size: 46px;
                    display: inline-block;
                    margin-top: 13px;
                }

            .modal-confirm .btn,
            .modal-confirm .btn:active {
                color: #fff;
                border-radius: 4px;
                background: #60c7c1;
                text-decoration: none;
                transition: all 0.4s;
                line-height: normal;
                min-width: 120px;
                border: none;
                min-height: 40px;
                border-radius: 3px;
                margin: 0 5px;
            }

            .modal-confirm .btn-secondary {
                background: #c1c1c1;
            }

                .modal-confirm .btn-secondary:hover,
                .modal-confirm .btn-secondary:focus {
                    background: #a8a8a8;
                }

            .modal-confirm .btn-danger {
                background: #f15e5e;
            }

                .modal-confirm .btn-danger:hover,
                .modal-confirm .btn-danger:focus {
                    background: #ee3535;
                }
    </style>


</head>
<body class="hold-transition sidebar-mini layout-fixed">
    <div class="wrapper">
        <!-- Preloader -->
        @Html.Partial("_ClientPreloader")

        <!-- Navbar -->
        @Html.Partial("_ClientNavbar")
        <!-- /.navbar -->
        <!-- Main Sidebar Container -->
        @Html.Partial("_ClientSidebar")
        <!-- Content Wrapper. Contains page content -->
        <div class="content-wrapper">

            <!-- Content Header (Page header) -->
            <div class="content-header">
                <div class="container-fluid">
                    <div class="row mb-2">
                        <div class="col-sm-6">
                            <h1 class="m-0">@ViewBag.Title</h1>
                        </div><!-- /.col -->
                        <div class="col-sm-6">
                            <ol class="breadcrumb float-sm-right">
                                <li class="breadcrumb-item"><a href="#">Home</a></li>
                                <li class="breadcrumb-item active">@ViewBag.Title</li>
                            </ol>
                        </div><!-- /.col -->
                    </div><!-- /.row -->
                </div><!-- /.container-fluid -->
            </div>
            <!-- /.content-header -->
            <!-- Main content -->
            <section class="content">
                <div class="container-fluid">

                    @*<div class="alert alert-danger alert-dismissible">
                            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                            <h5><i class="icon fas fa-ban"></i> Alert!</h5>
                            Danger alert preview. This alert is dismissable. A wonderful serenity has taken possession of my
                            entire
                            soul, like these sweet mornings of spring which I enjoy with my whole heart.
                        </div>
                        <div class="alert alert-info alert-dismissible">
                            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                            <h5><i class="icon fas fa-info"></i> Alert!</h5>
                            Info alert preview. This alert is dismissable.
                        </div>
                        <div class="alert alert-warning alert-dismissible">
                            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                            <h5><i class="icon fas fa-exclamation-triangle"></i> Alert!</h5>
                            Warning alert preview. This alert is dismissable.
                        </div>
                        <div class="alert alert-success alert-dismissible">
                            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                            <h5><i class="icon fas fa-check"></i> Alert!</h5>
                            Success alert preview. This alert is dismissable.
                         </div>*@

                    <div class="row">
                        <div class="col-md-12 ">
                            <div class="form-group">
                                <label for="teamname">Team Name </label>
                                <div class="input-group mt-3">
                                    <div class="input-group-prepend ">
                                        <span class="input-group-text">
                                            <i class="far fa-calendar-alt"></i>
                                        </span>
                                    </div>
                                    <input type="text" name="teamname" id="teamname" placeholder="Enter Team Name" value="@Model.TeamName"  class="form-control" readonly>
                                </div>
                            </div>
                        </div>
                    </div>


                    <div class="row">
                        <div class="form-group col-md-12">
                            <label for="teamdescription">Team Description</label>
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="fa fa-tasks"></i></span>
                                </div>
                                <textarea id="teamdescription" placeholder="Enter Team Description" name="teamdescription" class="form-control" rows="4" readonly>@Model.TeamDescription</textarea>
                            </div>
                        </div>
                    </div>


                    <div class="row">

                        <div class="col-12">

                            <!-- /.card -->
                            <div class="card">
                                <div class="card-header">
                                    <h3 class="card-title">Insert Team  Data</h3>
                                </div>
                                <!-- /.card-header -->
                                <div class="card-body">
                                    <table id="example1" class="table table-bordered table-striped projects">
                                        <thead>
                                            <tr>
                                                <th>SNo</th>
                                                <th>Image</th>
                                                <th>User Name </th>
                                                <th>Full Name </th>
                                                <th>Category Name</th>
                                                <th>Designation Name</th>
                                                <th>Designation Type</th>
                                                <th>Added On</th>
                                                <th>Added By</th>
                                                <th>Last Modified On</th>
                                                <th>Last Modified By</th>
                                            </tr>
                                        </thead>

                                        <tbody>
                                            @{ int SNo = 1;
                                                string notModified = "Not Modified Yet";
                                            }

                                            @foreach (var teamMemberDetails in Model.TeamMemberDetails)
                                            {

                                            <tr>
                                                <td> @SNo @{ SNo++; } </td>
                                                <td>
                                                    <a href="~/Staff/ViewStaff/@teamMemberDetails.TeamMemberUserName" target="_blank">
                                                        <img alt="Avatar" class="table-avatar" style="height:50px;width:50px;border-radius:100%" src="~/StaffImages/@teamMemberDetails.TeamMemberImagePath">
                                                    </a>
                                                </td>
                                                <td>
                                                    <a href="~/Staff/ViewStaff/@teamMemberDetails.TeamMemberUserName" target="_blank">
                                                        @teamMemberDetails.TeamMemberUserName
                                                    </a>
                                                </td>
                                                <td>@teamMemberDetails.TeamMemberFullName</td>
                                                <td>
                                                    <a href="~/StaffCategory/ViewStaffCategory/@teamMemberDetails.TeamMemberCategoryId" target="_blank">
                                                        @teamMemberDetails.TeamMemberCategoryName
                                                    </a>
                                                </td>
                                                <td>
                                                    @if (teamMemberDetails.TeamMemberDesignationType.CompareTo("TEAM") == 0)
                                                    {
                                                        <a href="~/TeamWiseStaffDesignation/ViewTeamWiseStaffDesignation/@teamMemberDetails.TeamMemberDesignationId" target="_blank">
                                                            @teamMemberDetails.TeamMemberDesignationName
                                                        </a>
                                                    }
                                                    else
                                                    {
                                                        <a href="~/StaffDesignation/ViewStaffDesignation/@teamMemberDetails.TeamMemberDesignationId" target="_blank">
                                                            @teamMemberDetails.TeamMemberDesignationName
                                                        </a>
                                                    }
                                                </td>
                                                <td>@teamMemberDetails.TeamMemberDesignationType</td>
                                                <td>@teamMemberDetails.AddedBy</td>
                                                <td>@teamMemberDetails.AddedOn</td>
                                                <td>
                                                    @{
                                                        if (teamMemberDetails.LastModifiedBy == "")
                                                        {
                                                            @notModified;
                                                        }
                                                        else
                                                        {
                                                            @teamMemberDetails.LastModifiedBy;
                                                        }
                                                    }

                                                </td>
                                                <td>
                                                    @{
                                                        if (teamMemberDetails.LastModifiedOn == null)
                                                        {
                                                            @notModified;
                                                        }
                                                        else
                                                        {
                                                            @teamMemberDetails.LastModifiedOn;
                                                        }
                                                    }
                                                </td>

                                            </tr>
                                            }
                                            </tbody>
                                        <tfoot>
                                            <tr>
                                                <th>SNo</th>
                                                <th>Image</th>
                                                <th>User Name </th>
                                                <th>Full Name </th>
                                                <th>Category Name</th>
                                                <th>Designation Name</th>
                                                <th>Designation Type</th>
                                                <th>Added On</th>
                                                <th>Added By</th>
                                                <th>Last Modified On</th>
                                                <th>Last Modified By</th>
                                            </tr>
                                        </tfoot>
                                    </table>


                                </div>
                                <!-- /.card-body -->
                                <div class="card-footer">
                                    <h3 class="card-title text-right"><b>Total : <i id="totalteammembers">@Model.TeamMemberDetails.Count Members</i></b></h3>
                                </div>


                            </div>
                            <!-- /.card -->
                            @*<div class="row">
                                <div class="col-md-12 col-sm-12 mb-3">
                                    <button class="btn btn-primary col-md-12" id="addteaminfodata">@ViewBag.Title</button>
                                </div>
                            </div>*@

                        </div>
                        <!-- /.col -->
                    </div>




                </div><!-- /.container-fluid -->
            </section>
            <!-- /.content -->
        </div>
        <!-- /.content-wrapper -->
        @Html.Partial("_ClientFooter")

        <!-- Control Sidebar -->
        <aside class="control-sidebar control-sidebar-dark">
            <!-- Control sidebar content goes here -->
        </aside>
        <!-- /.control-sidebar -->
    </div>
    <!-- ./wrapper -->
    <!-- JavaScript Links -->
    @Html.Partial("_AdminFooterLinks")






    <div id="myModal" class="modal fade col-lg-12 ">
        <div class="modal-dialog modal-confirm">
            <div class="modal-content">
                <div class="modal-header flex-column">
                    <div class="icon-box">
                        <i class="fa fa-info"></i>
                    </div>
                    <h4 class="modal-title w-100">Are you sure?</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                </div>
                <div class="modal-body">
                    <p id="modal-delete-para">Do you really want to delete these records? This process cannot be undone.</p>
                </div>
                <div class="modal-footer justify-content-center">
                    <button type="button" class="btn btn-secondary mb-2" id="canceldeletion" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger mb-2" id="suredeletion">Delete</button>
                </div>
            </div>
        </div>
    </div>
    <div id="updateModel" class="modal fade">
        <div class="modal-dialog modal1-confirm">
            <div class="modal-content">
                <div class="modal-header">
                    <div class="icon-box">
                        <i class="fa fa-pen"></i>
                    </div>
                    <h4 class="modal-title w-100">Confirmation</h4>
                </div>
                <div class="modal-body">
                    <p class="text-center">Are You sure You want to update.</p>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary btn-block mb-3" id="sureupdation" data-dismiss="modal">Sure, Update It</button>
                    <button class="btn btn-danger btn-block mb-3" id="cancelupdation" data-dismiss="modal">Cancel</button>

                </div>
            </div>
        </div>
    </div>













    <script>

        $(function () {
            //Initialize Select2 Elements

            $('.teamwisedesignation').select2({
                theme: 'bootstrap4'
            });


            $('.actualdesignation').select2({
                theme: 'bootstrap4'
            });

            $('.staffcategory').select2({
                theme: 'bootstrap4'
            });

            $('.memberid').select2({
                theme: 'bootstrap4'
            });
        });


    </script>


    <script>
        var projectName = "";

        function SetDeleteId(projectNameTemp) {
            projectName = projectNameTemp;
            document.getElementById('modal-delete-para').innerHTML = "Do you really want to delete Project <span class='text-danger'> " + projectName + " </span> ? This process cannot be undone. ";
        }

        function SureDeletion() {
            DeleteSelectedRow();
        }
    </script>

    <script>
        var t;
        var counter = 1;
        var SNo = "1";
        var memberid = "";
        var actualdesignation = 0;
        var teamwisedesignation = "";
        var designationvalue = "";
        var designationtype = "";
        var currentSelectedRow = null;
        var teamwiseDesignationId = "";
        var actualDesignationId = "";
        var currentlySelectedStaffCategoryId = "";


        $(document).ready(function () {
            t = $("#example1").DataTable({
                "responsive": true,
                "lengthChange": true,
                "autoWidth": false,
                "buttons": ["copy", "csv", "excel", "pdf", "print", "colvis"]
            });

            t.buttons().container().appendTo('#example1_wrapper .col-md-6:eq(0)');
            $('#updaterow').hide();
            $('#deleterow').hide();




            //This function set the value
            //from the input fields to the datamember
            //in the script tag
            function AssignRowValue() {
                SNo = $('#inputsno').val();
                memberid = $('#memberid').val();
                actualdesignation = $('#actualdesignation').val();
                teamwisedesignation = $('#teamwisedesignation').val();
                designationvalue = $('#actualdesignation').val();
                designationtype = 'ACTUAL';
                currentlySelectedStaffCategoryId = $('#staffcategory').val();
                if (teamwisedesignation != '--' && teamwisedesignation != null ) {
                    designationvalue = $('#teamwisedesignation option:selected').text();
                    teamwiseDesignationId = $('#teamwisedesignation option:selected').val();
                    designationtype = 'TEAM';
                }

            }

            //This function set the current sno to the counter (total number of rows)
            function SetCurrentRowValueToInputBox() {
                $('#inputsno').val(counter);
            }


            //this function delete the current selected row from the datatable
            function DeleteSelectedRow() {
                //To delete form array and and add userinfo to member dropdown

                let _tempTeamInfo = DELETEANDGET(currentSelectedRow.rowIndex - 1);
                //if (_tempTeamInfo._currentlySelectedStaffCategoryId == currentlySelectedStaffCategoryId) {
                //    $('#memberid').append('<option value=' + _tempTeamInfo._membername + '>' + _tempTeamInfo._membername + '</option>');
                //}

                t.rows(currentSelectedRow).remove().draw();

                ManageSNoOfData();
                ClearInputRow();
            }

            //this function update the current selected row from the datatable
            function UpdateSeletedRow() {
                AssignRowValue();
                t.row(currentSelectedRow).data([SNo, memberid, designationvalue, designationtype]).draw();

                //To update form array and and  add userinfo to member dropdown if its unique
                let _tempTeamInfo;
                if (designationtype == 'TEAM') {
                    _tempTeamInfo = UPDATE((currentSelectedRow.rowIndex - 1), currentlySelectedStaffCategoryId, memberid, teamwiseDesignationId, designationtype, actualdesignation);
                } else {
                    _tempTeamInfo = UPDATE((currentSelectedRow.rowIndex - 1), currentlySelectedStaffCategoryId, memberid, actualDesignationId, designationtype, actualdesignation);
                }
                //To add previously add user and remove selected user
                if (_tempTeamInfo.isSameMemberName(memberid) == false) {

                    // $('#memberid').append('<option value=' + _tempTeamInfo._membername + '>' + _tempTeamInfo._membername + '</option>');
                    $('#memberid option[value=' + memberid + ']').remove();
                }

                //Remaining part
                ManageSNoOfData();
                ClearInputRow();


            }


            function AddRow() {
                AssignRowValue();
                if (CHECKMEMBERALREADYADDED(memberid)) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Team Member ' + memberid+ ' already added.'
                        //  footer: '<a href="">Why do I have this issue?</a>'
                    });
                } else {


                    AssignRowValue();
                    t.row.add([
                        SNo,
                        memberid,
                        designationvalue,
                        designationtype
                    ]).draw();
                    counter++;
                    SetCurrentRowValueToInputBox();
                    ManageSNoOfData();
                    if (designationtype == 'TEAM') {
                        ADD(currentlySelectedStaffCategoryId, memberid, teamwiseDesignationId, designationtype, actualdesignation);
                    } else {
                        ADD(currentlySelectedStaffCategoryId, memberid, actualDesignationId, designationtype, actualdesignation);
                    }
                    $('#memberid option[value=' + memberid + ']').remove();
                }
            }


            //this function simply clear the input field
            //so that new value can be easily enter
            function ClearInputRow() {
                $('#inputsno').val(counter);
                $('#memberid').prop("selectedIndex", 0);
                $("#select2-memberid-container").html("Select Team Member");
                $('#actualdesignation').val("");
                $('#teamwisedesignation').prop("selectedIndex", 0);
                $("#select2-teamwisedesignation-container").html("Select Team Wise Designation");
                currentSelectedRow = null;
                $('#updaterow').fadeOut(1000);
                $('#deleterow').fadeOut(1000);
                $('#addrowbtndiv').fadeIn(1000);
                //$("#addrowbtndiv").addClass('col-md-12');
                //$("#addrowbtndiv").removeClass('col-md-4');
                REMOVEALREADYEXISTINGDATA();

            }

            //check if data is any data enter
            $('#addteaminfodata').on('click', function () {
                if ($("#teamname").val() == "") {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Enter team name  to procceed'
                        //  footer: '<a href="">Why do I have this issue?</a>'
                    });
                }
                else if (t.data().length == 0) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Enter Some Data To procceed'
                        //  footer: '<a href="">Why do I have this issue?</a>'
                    });
                }
                else {
                    Swal.fire({
                        icon: 'info',
                        title: 'Do you want to create the team?',
                        showDenyButton: true,
                        showCancelButton: true,
                        confirmButtonText: 'Yes! Do it:)',
                        denyButtonText: `Don't Insert`,
                    }).then((result) => {
                        /* Read more about isConfirmed, isDenied below */
                        if (result.isConfirmed)
                        insertteaminfodata();

                    });
                }

            });

            //when any row click this function
            //get that data and enter it on input fields
            $('#example1 tbody').on('click', 'tr', function () {
             //   $("#addrowbtndiv").removeClass('col-md-12');
              //  $("#addrowbtndiv").addClass('col-md-4');
                $('#addrowbtndiv').fadeOut(3000);
                currentSelectedRow = this;

                var _tempTeamInfo = FETCHSPECIFICDATA(this.rowIndex - 1);

                $('#inputsno').val(t.row(currentSelectedRow).data()[0]);
               if (_tempTeamInfo._currentlySelectedStaffCategoryId != $('#staffcategory').val()) {
                   $('#staffcategory option[value=' + _tempTeamInfo._currentlySelectedStaffCategoryId + ']').attr('selected', true);
                   $("#select2-staffcategory-container").html($('#staffcategory option:selected').text());
                   getStaffMemberDataByCategoryUsingAjax();
                }
                memberid = _tempTeamInfo._membername;
                $('#memberid').append('<option value=' + _tempTeamInfo._membername + '>' + t.row(currentSelectedRow).data()[1] + '</option>');
                $('#memberid option[value=' + _tempTeamInfo._membername + ']').attr('selected', true);
                $("#select2-memberid-container").html(_tempTeamInfo._membername);
                $('#actualdesignation').val('');
                if (_tempTeamInfo._designationtype == 'TEAM') {
                    $('#teamwisedesignation option[value=' + _tempTeamInfo._designationid + ']').attr('selected', true);
                    $("#select2-teamwisedesignation-container").html(t.row(currentSelectedRow).data()[2].trim());
                    teamwiseDesignationId = _tempTeamInfo._designationid;
                    $('#actualdesignation').val(_tempTeamInfo._actualDesignation);
                }
                else {
                    $('#actualdesignation').val(t.row(currentSelectedRow).data()[2]);
                    actualDesignationId = _tempTeamInfo._designationid;
                }
                clearallerrormessages();
                $('#updaterow').fadeIn(3000);
                $('#deleterow').fadeIn(3000);
            });


            //this function manage sno
            function ManageSNoOfData() {
                var totalNumberOfRows = t.data().length;
                for (var i = 0; i < totalNumberOfRows; i++) {
                    t.row((i)).data([(i + 1), t.row(i).data()[1], t.row(i).data()[2], t.row(i).data()[3]]).draw();
                }
                counter = totalNumberOfRows + 1;
                $('#totalteammembers').text(totalNumberOfRows + " Members");
            }





            $("#addrow").on('click', function () {
                if (ValidateInput() == true) {
                    AddRow();
                    ClearInputRow();
                }
            });

            $("#deleterow").click(function () {
                $("#myModal").modal('show');
            });

            $("#updaterow").click(function () {
                $("#updateModel").modal('show');
            });

            $("#canceldeletion").click(function () {
                $("#myModal").modal('hide');
                ClearInputRow();
            });

            $("#suredeletion").click(function () {
                DeleteSelectedRow();
                $("#myModal").modal('hide');

            });

            $('#clearteammemberselection').click(function () {
                $('#teamwisedesignation').prop("selectedIndex", 0);
                $("#select2-teamwisedesignation-container").html("Select Team Wise Designation");
            });

            function displayErrorMessage(element, errormessage) {
                removeErrorMessage(element);
                var tempErrorElement = CreateErrorElement(errormessage);
                $(tempErrorElement).css("display", "inline");
                $(element).closest('.form-group').append(tempErrorElement);
                $(element).addClass('is-invalid');
            }




            function ValidateInput() {
                var check = true;
                if ($("#teamname").val().trim() == "" ) {
                    displayErrorMessage($("#teamname"), "Please Enter Team Name");
                    check = false;
                }
                if ($("#memberid").val() == "--" || $("#memberid").val()==null) {
                    displayErrorMessage($("#memberid"), "Please Select Team Member");
                    check = false;
                }
                return check;
            }

            $('#teamname').on('keypress', function () {
                removeErrorMessage($("#teamname"));
            });

            $('#memberid').on('change', function () {
                if ($("#memberid").val() != '--') {
                    getStaffMemberActualDesignationByStaffMemberIdUsingAjax();
                    $('#actualdesignation').val('');
                    removeErrorMessage($("#memberid"));
                }
            });



            $("#cancelupdation").click(function () {
                $("#updateModel").modal('hide');
                ClearInputRow();
            });
            $("#sureupdation").click(function () {
                if (ValidateInput() == true) {
                    UpdateSeletedRow();
                    $("#updateModel").modal('hide');
                }
            });
            $("#refreshinputfields").click(function () {
                ClearInputRow();
                clearallerrormessages();

            });

        });


        function removeErrorMessage(element) {
            $(element).removeClass('is-invalid');
            $(element).closest('.form-group').find('.createderror').css("display", "none");
        }


        function CreateErrorElement(text) {
            var tempElement = document.createElement("span");
            $(tempElement).addClass("createderror  invalid-feedback");
            $(tempElement).css("display", "inline");
            tempElement.innerHTML = text;
            return tempElement;
        }


        function clearallerrormessages() {
            removeErrorMessage($("#memberid"));
        }


        //var regex = /^[0-9]\d*(((,\d{3}){1})?(\.\d{0,4})?)$/

        //////////////////////////////////////////////////////////////
        //                                                          //
        //                                                          //
        //       CODE TO PERFORM ARRAY ADDITON AND DELETEION        //
        //                                                          //
        //                                                          //
        //////////////////////////////////////////////////////////////

        //     Class to store data

        class TeamMemberInfo {
            constructor(_currentlySelectedStaffCategoryId, _membername, _designationid, _designationtype,_actualDesignation) {
                this._currentlySelectedStaffCategoryId = _currentlySelectedStaffCategoryId;
                this._membername = _membername;
                this._designationid = _designationid;
                this._designationtype = _designationtype;
                this._actualDesignation = _actualDesignation;
            }

            isSameMemberName(_tempmembername) {
                return this._membername == _tempmembername;
            }
        }

        //   Array to store data
        let _dataInfo = [];

        //    add function
        function ADD(_currentlySelectedStaffCategoryId, _membername, _designationid, _designationtype, _actualDesignation) {
            _dataInfo.push(new TeamMemberInfo(_currentlySelectedStaffCategoryId, _membername, _designationid, _designationtype, _actualDesignation));
        }

        // delete and get data
        function DELETEANDGET(_index) {
            let _tempDataInfo = _dataInfo[_index];
            _dataInfo.splice(_index, 1);
            return _tempDataInfo;
        }

        //   Update
        function UPDATE(_index, _currentlySelectedStaffCategoryId, _membername, _designationid, _designationtype, _actualDesignation) {
            let _tempDataInfo = _dataInfo[_index];
            _dataInfo[_index] = new TeamMemberInfo(_currentlySelectedStaffCategoryId, _membername, _designationid, _designationtype, _actualDesignation);
            return _tempDataInfo;
        }


        function CHECKMEMBERALREADYADDED(memberid) {
            for (var i = 0; i < _dataInfo.length; i++) {
                if (_dataInfo[i]._membername == memberid) return true;
            }
            return false;
        }

        function FETCHSPECIFICDATA(_index) {
            return _dataInfo[_index];
        }




        function REMOVEALREADYEXISTINGDATA() {
            $('#memberid').find('option').each(function (index, element) {
                if (element.value == '--') {

                } else if (CHECKMEMBERALREADYADDED(element.value) == true) {
                    $('#memberid option[value=' + element.value + ']').remove();
                }
                console.log(index);
                console.log(element.value);
                console.log(element.text);
            });
        }


            ///////////////////////////////////////////////////////////////






        $('#staffcategory').on('change', function () {
            $('#actualdesignation').val('');
            getStaffMemberDataByCategoryUsingAjax();
            currentlySelectedStaffCategoryId = $('#staffcategory').val();
            clearallerrormessages();
        });

        $('#teamwisedesignation').on('change', function () {
            teamwiseDesignationId = $('#teamwisedesignation').val();
        });



     function getStaffMemberDataByCategoryUsingAjax() {

            var staffcategory = $('#staffcategory').val();

            $.ajax({
                type: "POST",
                url: '@Url.Action("getStaffMemerDataByCategoryId")',
                data: '{staffcategoryid: ' + JSON.stringify(staffcategory) +  '}',
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (responseData) {
                    if (responseData != null && responseData.uniquenessResult != null) {

                        var parsed = JSON.parse(responseData.uniquenessResult);
                        $('#memberid').html('');
                        $('#memberid').append('<option value="--" class="disabled" selected disabled> Select Team Member </option>')
                        for (var i = 0; i < parsed.length; i++) {
                            if (!CHECKMEMBERALREADYADDED(parsed[i].Item1)) {
                                $('#memberid').append('<option value=' + parsed[i].Item1 + '>' + parsed[i].Item2 + '</option>');
                            }

                        }
                    }
                    else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'Something went wrong while fetching data!',
                            footer: '<a href="">Why do I have this issue?</a>'
                        })

                    }
                },
                error: function (responseData) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Something went wrong while fetching data!',
                       // footer: '<a href="">Why do I have this issue?</a>'
                    })
                }
            });

        }




  function getStaffMemberActualDesignationByStaffMemberIdUsingAjax() {
      actualDesignationId = "";
            var staffmemberid = $('#memberid').val();

            $.ajax({
                type: "POST",
                url: '@Url.Action("getStaffDesignationDataByMemberId")',
                data: '{staffmemberid: ' + JSON.stringify(staffmemberid) +  '}',
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                success: function (responseData) {
                    if (responseData != null && responseData.uniquenessResult != null) {
                        var parsed = JSON.parse(responseData.uniquenessResult);


                        $('#actualdesignation').val(parsed.Item2);
                        actualDesignationId = parsed.Item1;


                    }
                    else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'Something went wrong while fetching data!',
                            footer: '<a href="">Why do I have this issue?</a>'
                        })

                    }
                },
                error: function (responseData) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Something went wrong while fetching data!',
                       // footer: '<a href="">Why do I have this issue?</a>'
                    })
                }
            });

        }



















        function _(el) {
            return document.getElementById(el);
        }

        function insertteaminfodata() {
            //   var file = _("file1").files[0];

            //   if (file == undefined) {

            //       //Swal.fire({
            //       //    title: 'Choose File to Upload!!!',
            //       //    showClass: {
            //       //        popup: 'animate__animated animate__fadeInDown'
            //       //    },
            //       //    hideClass: {
            //       //        popup: 'animate__animated animate__fadeOutUp'
            //       //    }
            //       //})

            //       Swal.fire({
            //           title: 'OPPSS!!!',
            //           text: "Choose The file to upload",
            //           icon: 'warning',
            //           confirmButtonColor: '#3085d6',
            //           confirmButtonText: 'OK'
            //       }).then((result) => {
            //           //if (result.isConfirmed) {
            //           //    Swal.fire(
            //           //        'Deleted!',
            //           //        'Your file has been deleted.',
            //           //        'success'
            //           //    )
            //           //}
            //       })

            //       return;
            //   }
            //// alert(file.name+" | "+file.size+" | "+file.type);
            var formdata = new FormData();
            formdata.append("teamname", _("teamname").value);
            formdata.append("teamdescription", _("teamdescription").value);
            formdata.append("datainfo", _dataInfo);
            formdata.append("totalrowcount", _dataInfo.length);

            for (var counter = 0; counter < _dataInfo.length; counter++) {

                formdata.append("memberid_" + counter, _dataInfo[counter]._membername);
                formdata.append("designationid_" + counter,_dataInfo[counter]._designationid);
                formdata.append("designationtype_" + counter, _dataInfo[counter]._designationtype);

            }

            var ajax = new XMLHttpRequest();
            ajax.addEventListener("load", completeHandler, false);
            ajax.addEventListener("error", errorHandler, false);
            ajax.addEventListener("abort", abortHandler, false);
            ajax.open("POST", '@Url.Action("InsertTeamData")');
            ajax.send(formdata);
        }

        var responseRes;
        function completeHandler(event) {
            var insertionResult = JSON.parse(event.target.responseText).uniquenessResult;

            if (insertionResult == '"success"') {
                Swal.fire('Inserted!', '', 'success').then((result) => {

                    setInterval(function () {
                        location.href = "/TeamManagement/DisplayTeams";
                    }, 200);
                });


            } else {
                Swal.fire('Changes are not Inserted', '', 'info');
            }



        }
        function errorHandler(event) {

        }
        function abortHandler(event) {

        }



    </script>



</body>
</html>


