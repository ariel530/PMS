@model PMS.DynamicBindingModels.DailyExpenseManagementOverView_Item_ForView

@{
    ViewBag.Title = "View Daily Expense Info";
    Layout = null;
}


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>PMS | @ViewBag.Title</title>
    @Html.Partial("_AdminHeaderLinks")


    <style>
        .modal1-confirm {
            font-size: 14px;
        }

            .modal1-confirm .modal-content {
                padding: 20px;
                border-radius: 5px;
                border: none;
            }

            .modal1-confirm .modal-header {
                border-bottom: none;
                position: relative;
            }

            .modal1-confirm h4 {
                text-align: center;
                font-size: 26px;
                margin: 30px 0 -15px;
            }

            .modal1-confirm .form-control,
            .modal1-confirm .btn {
                min-height: 40px;
                border-radius: 3px;
            }

            .modal1-confirm .close {
                position: absolute;
                top: -5px;
                right: -5px;
            }

            .modal1-confirm .modal-footer {
                border: none;
                text-align: center;
                border-radius: 5px;
                font-size: 13px;
            }

            .modal1-confirm .icon-box {
                position: absolute;
                margin: 0 auto;
                left: 0;
                right: 0;
                top: -70px;
                width: 95px;
                height: 95px;
                border-radius: 50%;
                z-index: 9;
                background: #82ce34;
                padding: 15px;
                text-align: center;
                box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.1);
            }

                .modal1-confirm .icon-box i {
                    font-size: 58px;
                    position: relative;
                    top: 3px;
                }

            .modal1-confirm .modal-dialog {
                margin-top: 80px;
            }

            .modal1-confirm .btn {
                border-radius: 4px;
                text-decoration: none;
                transition: all 0.4s;
                line-height: normal;
                border: none;
            }

                .modal1-confirm .btn:hover,
                .modal1-confirm .btn:focus {
                    background: #6fb32b;
                    outline: none;
                }




        .modal-confirm {
            color: #636363;
        }

            .modal-confirm .modal-content {
                padding: 20px;
                border-radius: 5px;
                border: none;
                text-align: center;
                font-size: 14px;
            }

            .modal-confirm .modal-header {
                border-bottom: none;
                position: relative;
            }

            .modal-confirm h4 {
                text-align: center;
                font-size: 26px;
                margin: 30px 0 -10px;
            }

            .modal-confirm .close {
                position: absolute;
                top: -5px;
                right: -2px;
            }

            .modal-confirm .modal-body {
                color: #999;
            }

            .modal-confirm .modal-footer {
                border: none;
                text-align: center;
                border-radius: 5px;
                font-size: 13px;
                padding: 10px 15px 25px;
            }

                .modal-confirm .modal-footer a {
                    color: #999;
                }

            .modal-confirm .icon-box {
                width: 80px;
                height: 80px;
                margin: 0 auto;
                border-radius: 50%;
                z-index: 9;
                text-align: center;
                border: 3px solid #f15e5e;
            }

                .modal-confirm .icon-box i {
                    color: #f15e5e;
                    font-size: 46px;
                    display: inline-block;
                    margin-top: 13px;
                }

            .modal-confirm .btn,
            .modal-confirm .btn:active {
                color: #fff;
                border-radius: 4px;
                background: #60c7c1;
                text-decoration: none;
                transition: all 0.4s;
                line-height: normal;
                min-width: 120px;
                border: none;
                min-height: 40px;
                border-radius: 3px;
                margin: 0 5px;
            }

            .modal-confirm .btn-secondary {
                background: #c1c1c1;
            }

                .modal-confirm .btn-secondary:hover,
                .modal-confirm .btn-secondary:focus {
                    background: #a8a8a8;
                }

            .modal-confirm .btn-danger {
                background: #f15e5e;
            }

                .modal-confirm .btn-danger:hover,
                .modal-confirm .btn-danger:focus {
                    background: #ee3535;
                }
    </style>


</head>
<body class="hold-transition sidebar-mini layout-fixed">
    <div class="wrapper">
        <!-- Preloader -->
        @Html.Partial("_ClientPreloader")

        <!-- Navbar -->
        @Html.Partial("_ClientNavbar")
        <!-- /.navbar -->
        <!-- Main Sidebar Container -->
        @Html.Partial("_ClientSidebar")
        <!-- Content Wrapper. Contains page content -->
        <div class="content-wrapper">

            <!-- Content Header (Page header) -->
            <div class="content-header">
                <div class="container-fluid">
                    <div class="row mb-2">
                        <div class="col-sm-6">
                            <h1 class="m-0">@ViewBag.Title</h1>
                        </div><!-- /.col -->
                        <div class="col-sm-6">
                            <ol class="breadcrumb float-sm-right">
                                <li class="breadcrumb-item"><a href="#">Home</a></li>
                                <li class="breadcrumb-item"><a href="/DailyExpenseManagement/DisplayAllDailyExpenseData">Display Daily Expense Info</a></li>
                                <li class="breadcrumb-item active">@ViewBag.Title</li>
                            </ol>
                        </div><!-- /.col -->
                    </div><!-- /.row -->
                </div><!-- /.container-fluid -->
            </div>
            <!-- /.content-header -->
            <!-- Main content -->
            <section class="content">
                <div class="container-fluid">

                    @*<div class="alert alert-danger alert-dismissible">
                            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                            <h5><i class="icon fas fa-ban"></i> Alert!</h5>
                            Danger alert preview. This alert is dismissable. A wonderful serenity has taken possession of my
                            entire
                            soul, like these sweet mornings of spring which I enjoy with my whole heart.
                        </div>
                        <div class="alert alert-info alert-dismissible">
                            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                            <h5><i class="icon fas fa-info"></i> Alert!</h5>
                            Info alert preview. This alert is dismissable.
                        </div>
                        <div class="alert alert-warning alert-dismissible">
                            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                            <h5><i class="icon fas fa-exclamation-triangle"></i> Alert!</h5>
                            Warning alert preview. This alert is dismissable.
                        </div>
                        <div class="alert alert-success alert-dismissible">
                            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                            <h5><i class="icon fas fa-check"></i> Alert!</h5>
                            Success alert preview. This alert is dismissable.
                        </div>*@


                    <div class="row">
                        <div class="col-md-3 col-sm-12 mb-3">
                            <div class="form-group">
                                <label for="inputsno">Expense Date </label>
                                <div class="input-group mt-3">
                                    <div class="input-group-prepend ">
                                        <span class="input-group-text">
                                            <i class="far fa-calendar-alt"></i>
                                        </span>
                                    </div>
                                    <input type="date" name="expensedate" id="expensedate" value="@Model.DailyExpenseOverview.DailyExpenseDate.ToString("yyyy-MM-dd")" class="form-control" disabled>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 col-sm-12 mb-3">
                            <div class="form-group">
                                <label for="inputreason">Customer Name <a href="~/Customer/AddCustomer" class="btn btn-success" style="border-radius:100%">+</a></label>
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fas fa-cheese"></i></span>
                                    </div>
                                    <select class="form-control select2" name="customername" id="customername" data-placeholder="Enter Customer name" data-dropdown-css-class="select2" style="width: 82%;" disabled>
                                        @*@{
                                                string[] data = Model.ProjectInfoData.ProjectSearchingKeywords.Split(',');
                                                foreach (string dat in data)
                                                {
                                                    <option value="@dat" selected="selected">@dat</option>
                                                }
                                            }*@
                                        @*@foreach (var customerInfoData in Model.CustomerInfoData)
                                        {*@
                                        <option value="@Model.DailyExpenseOverview.DailyExpenseCustomerName" selected="selected">@Model.DailyExpenseOverview.DailyExpenseCustomerName</option>
                                        @*}*@

                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 col-sm-12 mb-3">
                            <div class="form-group">
                                <label for="inputbudget"> Type &nbsp;&nbsp;&nbsp;<a href="~/CustomerType/AddCustomerType" class="bg-info btn" style="border-radius:100%;text-decoration:none;min-width:10px ">+</a></label>
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fas fa-cheese"></i></span>
                                    </div>
                                    <select class="form-control custom-select customertype" name="customertype" id="customertype" style="width: 82%;" disabled>
                                        <option value="" selected>@Model.DailyExpenseOverview.DailyExpenseCustomerType</option>
                                        @*<option value="EXTRA">Extra</option>*@

                                    </select>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 col-sm-12 mb-3">
                            <div class="form-group">
                                <label for="inputbudget">Expense Type <a href="~/DailyExpenseType/AddDailyExpenseType" class="bg-pink btn" style="border-radius:100%;text-decoration:none;">+</a></label>
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fas fa-cheese"></i></span>
                                    </div>
                                    <select class="form-control custom-select expensetype" name="expensetype" id="expensetype" style="width: 82%;" disabled>
                                        @*@foreach (var dailyExpenseType in Model.DailyExpenseTypeData)
                                        {*@
                                        <option value="" selected="selected">@Model.DailyExpenseOverview.DailyExpenseTypeName</option>
                                        @*}*@

                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>


                    @*<div class="row">
                        <div class="col-md-2 col-sm-12 mb-2">
                            <div class="form-group">
                                <label for="inputsno">S.No <i class="fas fa-sync-alt fa-spin" id="refreshinputfields" style="cursor:hand;">&nbsp;</i></label>
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fas fa-cheese"></i></span>
                                    </div>
                                    <input type="text" name="projectname" placeholder="Enter SNo" id="inputsno" value="1" class="form-control" readonly>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 col-sm-12 mb-3">
                            <div class="form-group">
                                <label for="inputreason">Reason</label>
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fas fa-cheese"></i></span>
                                    </div>
                                    <input type="text" name="projectname" placeholder="Enter Reason" id="inputreason" class="form-control">
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3 col-sm-12 mb-3">
                            <div class="form-group">
                                <label for="inputbudget">Budget</label>
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fas fa-cheese"></i></span>
                                    </div>
                                    <input type="text" pattern="^\$\d{1,3}(,\d{3})*(\.\d+)?$" data-type="currency" name="projectname" placeholder="Enter Budget" id="inputbudget" class="form-control">
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4 col-sm-12 mb-4">
                            <div class="form-group">
                                <label for="inputbudget">Note</label>
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text"><i class="fas fa-cheese"></i></span>
                                    </div>
                                    <input type="text" name="note" placeholder="Enter Note" id="inputnote" class="form-control">
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12 col-sm-12 mb-3" id="addrowbtndiv">
                            <button class="btn btn-primary col-md-12" id="addrow">Add</button>
                        </div>
                        <div class="col-md-4 col-sm-12 mb-3">
                            <button class="btn btn-info col-md-12 " id="updaterow">Update</button>
                        </div>
                        <div class="col-md-4 col-sm-12 mb-3">
                            <button class="btn btn-danger col-md-12" id="deleterow">Delete</button>
                        </div>
                    </div>*@

                    <div class="row">

                        <div class="col-12">

                            <!-- /.card -->
                            <div class="card">
                                <div class="card-header">
                                    <h3 class="card-title">View Expense Data</h3>
                                </div>
                                <!-- /.card-header -->
                                <div class="card-body">
                                    <table id="example1" class="table table-bordered table-striped">
                                        <thead>
                                            <tr>
                                                <th>SNo</th>
                                                <th>Reason</th>
                                                <th>Price</th>
                                                <th>Note</th>

                                            </tr>
                                        </thead>

                                        <tbody>

                                            @{
                                                int counter = 1;
                                                double total = 0;
                                            }
                                            @foreach (var dailyExpenseDetail in Model.DailyExpenseItemDetailsData)
                                            {
                                                
                                                <tr>
                                                    <td>

                                                        @counter
                                                        @{total += dailyExpenseDetail.DailyExpenseItemPrice;counter++;}

                                                    </td>
                                                    <td>
                                                        @dailyExpenseDetail.DailyExpenseItemReason
                                                    </td>
                                                    <td>
                                                        ₪ @dailyExpenseDetail.DailyExpenseItemPrice
                                                    </td>
                                                    <td>
                                                        @dailyExpenseDetail.DailyExpenseItemNote
                                                    </td>
                                                </tr>
                                            }


                                        </tbody>
                                        <tfoot>
                                            <tr>
                                                <th>SNo</th>
                                                <th>Reason</th>
                                                <th>Price</th>
                                                <th>Note</th>
                                            </tr>
                                        </tfoot>
                                    </table>


                                </div>
                                <!-- /.card-body -->
                                <div class="card-footer">
                                    <h3 class="card-title text-right"><b>Total : <i id="totalBudgetAmount">₪ @total.ToString("#,##.00")</i></b></h3>
                                </div>


                            </div>
                            <!-- /.card -->
                            @*<div class="row">
                                <div class="col-md-12 col-sm-12 mb-3">
                                    <button class="btn btn-primary col-md-12" id="updateBudgetInfo">@ViewBag.Title</button>
                                </div>
                            </div>*@

                        </div>
                        <!-- /.col -->
                    </div>




                </div><!-- /.container-fluid -->
            </section>
            <!-- /.content -->
        </div>
        <!-- /.content-wrapper -->
        @Html.Partial("_ClientFooter")

        <!-- Control Sidebar -->
        <aside class="control-sidebar control-sidebar-dark">
            <!-- Control sidebar content goes here -->
        </aside>
        <!-- /.control-sidebar -->
    </div>
    <!-- ./wrapper -->
    <!-- JavaScript Links -->
    @Html.Partial("_AdminFooterLinks")






    <div id="myModal" class="modal fade col-lg-12 ">
        <div class="modal-dialog modal-confirm">
            <div class="modal-content">
                <div class="modal-header flex-column">
                    <div class="icon-box">
                        <i class="fa fa-info"></i>
                    </div>
                    <h4 class="modal-title w-100">Are you sure?</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                </div>
                <div class="modal-body">
                    <p id="modal-delete-para">Do you really want to delete these records? This process cannot be undone.</p>
                </div>
                <div class="modal-footer justify-content-center">
                    <button type="button" class="btn btn-secondary mb-2" id="canceldeletion" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger mb-2" id="suredeletion">Delete</button>
                </div>
            </div>
        </div>
    </div>
    <div id="updateModel" class="modal fade">
        <div class="modal-dialog modal1-confirm">
            <div class="modal-content">
                <div class="modal-header">
                    <div class="icon-box">
                        <i class="fa fa-pen"></i>
                    </div>
                    <h4 class="modal-title w-100">Confirmation</h4>
                </div>
                <div class="modal-body">
                    <p class="text-center">Are You sure You want to update.</p>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary btn-block mb-3" id="sureupdation" data-dismiss="modal">Sure, Update It</button>
                    <button class="btn btn-danger btn-block mb-3" id="cancelupdation" data-dismiss="modal">Cancel</button>

                </div>
            </div>
        </div>
    </div>













    <script>

        $(function () {
            //Initialize Select2 Elements
            $('.select2').select2({
                tags: true,
                tokenSeparators: [',', ' '],
                createTag: function (params) {
                    var term = $.trim(params.term);

                    if (term === '') {
                        return null;
                    }

                    return {
                        id: term,
                        text: term,
                        newTag: true // add additional parameters
                    }
                }
            })

            $('.customertype').select2({
                theme: 'bootstrap4'
            })


            $('.expensetype').select2({
                theme: 'bootstrap4'
            })
        });


    </script>


    <script>
        var projectName = "";

        function SetDeleteId(projectNameTemp) {
            projectName = projectNameTemp;
            document.getElementById('modal-delete-para').innerHTML = "Do you really want to delete Project <span class='text-danger'> " + projectName + " </span> ? This process cannot be undone. ";
        }

        function SureDeletion() {
            DeleteSelectedRow();
        }
    </script>

    <script>
        var t;
        $(document).ready(function () {
            t = $("#example1").DataTable({
                "responsive": true,
                "lengthChange": true,
                "autoWidth": false,
                "buttons": ["copy", "csv", "excel", "pdf", "print", "colvis"]
            });

            t.buttons().container().appendTo('#example1_wrapper .col-md-6:eq(0)');
            $('#updaterow').hide();
            $('#deleterow').hide();



            var counter = 1;
            var SNo = "1";
            var reason = "";
            var budget = 0;
            var note = "";
            var currentSelectedRow = null;



            //This function set the value
            //from the input fields to the datamember
            //in the script tag
            function AssignRowValue() {
                SNo = $('#inputsno').val();
                reason = $('#inputreason').val();
                budget = $('#inputbudget').val();
                note = $('#inputnote').val();
            }

            //This function set the current sno to the counter (total number of rows)
            function SetCurrentRowValueToInputBox() {
                $('#inputsno').val(counter);
            }


            //this function delete the current selected row from the datatable
            function DeleteSelectedRow() {
                t.rows(currentSelectedRow).remove().draw();
                ManageSNoOfData();
                ClearInputRow();
            }

            //this function update the current selected row from the datatable
            function UpdateSeletedRow() {
                AssignRowValue();
                t.row(currentSelectedRow).data([SNo, reason, budget, note]).draw();
                ManageSNoOfData();
                ClearInputRow();
            }


            //this function simply clear the input field
            //so that new value can be easily enter
            function ClearInputRow() {
                $('#inputsno').val(counter);
                $('#inputreason').val("");
                $('#inputbudget').val("");
                $('#inputnote').val("");
                currentSelectedRow = null;
                $('#updaterow').fadeOut(1000);
                $('#deleterow').fadeOut(1000);
                $("#addrowbtndiv").addClass('col-md-12');
                $("#addrowbtndiv").removeClass('col-md-4');

            }

            //check if data is any data enter
            $('#updateBudgetInfo').on('click', function () {
                if ($("#customername").val() == null || $("#customername").val().trim() == "") {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Enter customer name to procceed'
                        //  footer: '<a href="">Why do I have this issue?</a>'
                    });
                }
                else if ($("#expensedate").val() == "") {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Select date to procceed'
                        //  footer: '<a href="">Why do I have this issue?</a>'
                    });
                }
                else if (t.data().length == 0) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Enter Some Data To procceed'
                        //  footer: '<a href="">Why do I have this issue?</a>'
                    });
                }
                else {
                    Swal.fire({
                        icon: 'info',
                        title: 'Do you want to insert the daily expense?',
                        showDenyButton: true,
                        showCancelButton: true,
                        confirmButtonText: 'Yes! Do it:)',
                        denyButtonText: `Don't Insert`,
                    }).then((result) => {
                        /* Read more about isConfirmed, isDenied below */
                        insertDailyExpenseData();

                    });
                }

            });

            //when any row click this function
            //get that data and enter it on input fields
            $('#example1 tbody').on('click', 'tr', function () {
                $("#addrowbtndiv").removeClass('col-md-12');
                $("#addrowbtndiv").addClass('col-md-4');
                currentSelectedRow = this;

                $('#inputsno').val(t.row(currentSelectedRow).data()[0]);
                $('#inputreason').val(t.row(currentSelectedRow).data()[1]);
                $('#inputbudget').val(t.row(currentSelectedRow).data()[2]);
                $('#inputnote').val(t.row(currentSelectedRow).data()[3]);
                $('#updaterow').fadeIn(3000);
                $('#deleterow').fadeIn(3000);
            });


            //this function manage sno
            function ManageSNoOfData() {
                var totalBudgetAmount = +0;
                var totalNumberOfRows = t.data().length;
                for (var i = 0; i < totalNumberOfRows; i++) {
                    t.row((i)).data([(i + 1), t.row(i).data()[1], t.row(i).data()[2], t.row(i).data()[3]]).draw();
                    totalBudgetAmount += parseFloat(t.row(i).data()[2].substring(currencySymbol.length));
                }
                counter = totalNumberOfRows + 1;
                var totalBudgetAmountA = "" + totalBudgetAmount;
                if (totalBudgetAmountA.indexOf('.') == -1) {
                    totalBudgetAmountA += '.00';

                }

                $('#totalBudgetAmount').html(currencySymbol + " " + totalBudgetAmountA);

                console.log("w " + totalBudgetAmount);
            }



            function AddRow() {
                AssignRowValue();
                t.row.add([
                    SNo,
                    reason,
                    budget,
                    note
                ]).draw();
                counter++;
                SetCurrentRowValueToInputBox();
                ManageSNoOfData();

            }
            $("#addrow").on('click', function () {
                if (ValidateInput() == true) {
                    AddRow();
                    ClearInputRow();
                }
            });

            $("#deleterow").click(function () {
                $("#myModal").modal('show');
            });

            $("#updaterow").click(function () {
                $("#updateModel").modal('show');
            });

            $("#canceldeletion").click(function () {
                $("#myModal").modal('hide');
                ClearInputRow();
            });
            $("#suredeletion").click(function () {
                DeleteSelectedRow();
                $("#myModal").modal('hide');

            });

            let reasonErrorElement = CreateErrorElement("Please Enter Reason");
            let budgetErrorElement = CreateErrorElement("Please Enter Budget");
            var reasonElement = $("#inputreason");
            var budgetElement = $("#inputbudget");




            function CreateErrorElement(text) {
                var tempElement = document.createElement("span");
                $(tempElement).addClass("invalid-feedback");
                $(tempElement).css("display", "inline");
                tempElement.innerHTML = text;
                return tempElement;
            }



            function ValidateInput() {
                var check = true;
                if (reasonElement.val() == "") {
                    $(reasonErrorElement).css("display", "inline");
                    $(reasonElement).closest('.form-group').append(reasonErrorElement);

                    $(reasonElement).addClass('is-invalid');
                    check = false;
                }
                if (budgetElement.val() == "") {
                    $(budgetErrorElement).css("display", "inline");
                    $(budgetElement).closest('.form-group').append(budgetErrorElement);
                    $(budgetElement).addClass('is-invalid');
                    check = false;
                }
                return check;
            }

            $('#inputreason').on('keypress', function () {
                $(reasonElement).removeClass('is-invalid');
                $(reasonErrorElement).css("display", "none");

            });

            $('#inputbudget').keypress(function () {
                $(budgetElement).removeClass('is-invalid');
                $(budgetErrorElement).css("display", "none");

            });



            $("#cancelupdation").click(function () {
                $("#updateModel").modal('hide');
                ClearInputRow();
            });
            $("#sureupdation").click(function () {
                if (ValidateInput() == true) {
                    UpdateSeletedRow();
                    $("#updateModel").modal('hide');
                }
            });
            $("#refreshinputfields").click(function () {
                ClearInputRow();
            });






            //Currency Validator
            $("input[data-type='currency']").on({
                keyup: function () {
                    formatCurrency($(this));
                },
                blur: function () {
                    formatCurrency($(this), "blur");
                }
            });


            function formatNumber(n) {
                // format number 1000000 to 1,234,567
                return n.replace(/\D/g, "").replace(/\B(?=(\d{3})+(?!\d))/g, ",")
            }


            var currencySymbol = "₪";

            function formatCurrency(input, blur) {
                // appends $ to value, validates decimal side
                // and puts cursor back in right position.

                // get input value
                var input_val = input.val();

                // don't validate empty input
                if (input_val === "") {
                    return;
                }

                // original length
                var original_len = input_val.length;

                // initial caret position
                var caret_pos = input.prop("selectionStart");

                // check for decimal
                if (input_val.indexOf(".") >= 0) {

                    // get position of first decimal
                    // this prevents multiple decimals from
                    // being entered
                    var decimal_pos = input_val.indexOf(".");

                    // split number by decimal point
                    var left_side = input_val.substring(0, decimal_pos);
                    var right_side = input_val.substring(decimal_pos);

                    // add commas to left side of number
                    left_side = formatNumber(left_side);

                    // validate right side
                    right_side = formatNumber(right_side);

                    // On blur make sure 2 numbers after decimal
                    if (blur === "blur") {
                        right_side += "00";
                    }

                    // Limit decimal to only 2 digits
                    right_side = right_side.substring(0, 2);

                    // join number by .
                    input_val = currencySymbol + left_side + "." + right_side;

                } else {
                    // no decimal entered
                    // add commas to number
                    // remove all non-digits
                    input_val = formatNumber(input_val);
                    input_val = currencySymbol + input_val;

                    // final formatting
                    if (blur === "blur") {
                        input_val += ".00";
                    }
                }

                // send updated string to input
                input.val(input_val);

                // put caret back in the right position
                var updated_len = input_val.length;
                caret_pos = updated_len - original_len + caret_pos;
                input[0].setSelectionRange(caret_pos, caret_pos);
            }


        });
        //var regex = /^[0-9]\d*(((,\d{3}){1})?(\.\d{0,4})?)$/


function _(el){
    return document.getElementById(el);
}

function insertDailyExpenseData(){
 //   var file = _("file1").files[0];

 //   if (file == undefined) {

 //       //Swal.fire({
 //       //    title: 'Choose File to Upload!!!',
 //       //    showClass: {
 //       //        popup: 'animate__animated animate__fadeInDown'
 //       //    },
 //       //    hideClass: {
 //       //        popup: 'animate__animated animate__fadeOutUp'
 //       //    }
 //       //})

 //       Swal.fire({
 //           title: 'OPPSS!!!',
 //           text: "Choose The file to upload",
 //           icon: 'warning',
 //           confirmButtonColor: '#3085d6',
 //           confirmButtonText: 'OK'
 //       }).then((result) => {
 //           //if (result.isConfirmed) {
 //           //    Swal.fire(
 //           //        'Deleted!',
 //           //        'Your file has been deleted.',
 //           //        'success'
 //           //    )
 //           //}
 //       })

 //       return;
 //   }
	//// alert(file.name+" | "+file.size+" | "+file.type);
	var formdata = new FormData();
    formdata.append("expensedate", _("expensedate").value);
    formdata.append("customername", _("customername").value);
    formdata.append("customertype", _("customertype").value);
    formdata.append("expensetype", _("expensetype").value);
    formdata.append("totalrowcount", t.data().length);

    for (var counter = 0; counter < t.data().length; counter++) {

        formdata.append("reason_" + counter, t.row(counter).data()[1]);
        formdata.append("price_" + counter, t.row(counter).data()[2]);
        formdata.append("note_" + counter, t.row(counter).data()[3]);

    }

	var ajax = new XMLHttpRequest();
	ajax.addEventListener("load", completeHandler, false);
	ajax.addEventListener("error", errorHandler, false);
	ajax.addEventListener("abort", abortHandler, false);
	ajax.open("POST", '@Url.Action("InsertDailyExpenseData")');
	ajax.send(formdata);
		}

        var responseRes;
        function completeHandler(event) {
            var insertionResult = JSON.parse(event.target.responseText).uniquenessResult;

            if (insertionResult=='"success"') {
                Swal.fire('Inserted!', '', 'success').then((result) => {

                    setInterval(function () {
                        location.href = "/DailyExpenseManagement/DisplayAllDailyExpenseData";
                    }, 200);
                });


            } else  {
                Swal.fire('Changes are not Inserted', '', 'info');
    }



}
function errorHandler(event){

}
function abortHandler(event){

}



    </script>




</body>
</html>


